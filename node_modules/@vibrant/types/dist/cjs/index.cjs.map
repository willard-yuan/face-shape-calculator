{"version":3,"file":"index.cjs","sources":["../../src/index.ts"],"sourcesContent":["export type Resolvable<T> = T | Promise<T>;\n\n/**\n * An internal implementation of Promise.withResolvers\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/withResolvers\n */\nexport class Defer<R> {\n\tresolve!: (thenableOrResult: R | Promise<R>) => void;\n\treject!: (error: any) => void;\n\tpromise: Promise<R>;\n\tconstructor() {\n\t\tthis.promise = new Promise<R>((_resolve, _reject) => {\n\t\t\tthis.resolve = _resolve;\n\t\t\tthis.reject = _reject;\n\t\t});\n\t}\n}\n\n/**\n * An internal implementation of Promise.withResolvers\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/withResolvers\n */\nexport function defer<R>(): Defer<R> {\n\treturn new Defer<R>();\n}\n"],"names":[],"mappings":";;AAMO,MAAM,MAAS;AAAA,EAIrB,cAAc;AACb,SAAK,UAAU,IAAI,QAAW,CAAC,UAAU,YAAY;AACpD,WAAK,UAAU;AACf,WAAK,SAAS;AAAA,IAAA,CACd;AAAA,EAAA;AAEH;AAMO,SAAS,QAAqB;AACpC,SAAO,IAAI,MAAS;AACrB;;;"}