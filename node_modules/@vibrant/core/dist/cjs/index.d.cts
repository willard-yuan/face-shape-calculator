import { Builder } from './builder.cjs';
import { Options } from './options.cjs';
import { ImageSource } from '@vibrant/image';
import { Palette } from '@vibrant/color';
import { Pipeline, ProcessResult } from './pipeline.cjs';
/**
 * Main class of `node-vibrant`.
 */
export declare class Vibrant {
    private _src;
    private _result;
    private static _pipeline;
    static use(pipeline: Pipeline): void;
    static DefaultOpts: Partial<Options>;
    static from(src: ImageSource): Builder;
    get result(): ProcessResult | undefined;
    opts: Options;
    /**
     *
     * @param _src Path to image file (supports HTTP/HTTPs)
     * @param opts Options (optional)
     */
    constructor(_src: ImageSource, opts?: Partial<Options>);
    private _process;
    getPalette(): Promise<Palette>;
    getPalettes(): Promise<{
        [name: string]: Palette;
    }>;
}
export { BasicPipeline } from './pipeline.cjs';
export { WorkerPipeline } from './pipeline/worker/client.cjs';
export { runPipelineInWorker } from './pipeline/worker/host.cjs';
export { Builder };
