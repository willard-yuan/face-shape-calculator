{"version":3,"file":"BottomSection.jsx","sourceRoot":"","sources":["../../../../../src/extensions/surveys/components/BottomSection.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,wBAAwB,CAAA;AAI/C,OAAO,EAAE,UAAU,EAAE,MAAM,cAAc,CAAA;AACzC,OAAO,EAAE,aAAa,EAAE,uBAAuB,EAAE,uBAAuB,EAAE,MAAM,kBAAkB,CAAA;AAClG,OAAO,EAAE,WAAW,EAAE,MAAM,eAAe,CAAA;AAE3C,MAAM,UAAU,aAAa,CAAC,EAc7B;QAbG,IAAI,UAAA,EACJ,cAAc,oBAAA,EACd,UAAU,gBAAA,EACV,QAAQ,cAAA,EACR,IAAI,UAAA,EACJ,eAAe,qBAAA;IAST,IAAA,KAA6B,UAAU,CAAC,aAAa,CAAC,EAApD,aAAa,mBAAA,EAAE,OAAO,aAA8B,CAAA;IAC5D,IAAM,SAAS,GACX,UAAU,CAAC,qBAAqB;QAChC,uBAAuB,CAAC,UAAU,CAAC,iBAAiB,IAAI,uBAAuB,CAAC,iBAAiB,CAAC,CAAA;IACtG,OAAO,CACH,CAAC,GAAG,CAAC,SAAS,CAAC,gBAAgB,CAC3B;YAAA,CAAC,GAAG,CAAC,SAAS,CAAC,SAAS,CACpB;gBAAA,CAAC,MAAM,CACH,SAAS,CAAC,aAAa,CACvB,QAAQ,CAAC,CAAC,cAAc,CAAC,CACzB,IAAI,CAAC,QAAQ,CACb,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAC3C,OAAO,CAAC,CAAC;YACL,IAAI,IAAI,EAAE,CAAC;gBACP,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,IAAI,CAAC,IAAI,CAAC,CAAA;YACtB,CAAC;YACD,IAAI,aAAa,EAAE,CAAC;gBAChB,eAAe,aAAf,eAAe,uBAAf,eAAe,EAAI,CAAA;YACvB,CAAC;iBAAM,CAAC;gBACJ,QAAQ,EAAE,CAAA;YACd,CAAC;QACL,CAAC,CAAC,CAEF;oBAAA,CAAC,IAAI,CACT;gBAAA,EAAE,MAAM,CACZ;YAAA,EAAE,GAAG,CACL;YAAA,CAAC,CAAC,UAAU,CAAC,UAAU,IAAI,CAAC,WAAW,CAAC,AAAD,EAAG,CAC9C;QAAA,EAAE,GAAG,CAAC,CACT,CAAA;AACL,CAAC","sourcesContent":["import { window } from '../../../utils/globals'\n\nimport { SurveyAppearance } from '../../../posthog-surveys-types'\n\nimport { useContext } from 'preact/hooks'\nimport { SurveyContext, defaultSurveyAppearance, getContrastingTextColor } from '../surveys-utils'\nimport { PostHogLogo } from './PostHogLogo'\n\nexport function BottomSection({\n    text,\n    submitDisabled,\n    appearance,\n    onSubmit,\n    link,\n    onPreviewSubmit,\n}: {\n    text: string\n    submitDisabled: boolean\n    appearance: SurveyAppearance\n    onSubmit: () => void\n    link?: string | null\n    onPreviewSubmit?: () => void\n}) {\n    const { isPreviewMode, isPopup } = useContext(SurveyContext)\n    const textColor =\n        appearance.submitButtonTextColor ||\n        getContrastingTextColor(appearance.submitButtonColor || defaultSurveyAppearance.submitButtonColor)\n    return (\n        <div className=\"bottom-section\">\n            <div className=\"buttons\">\n                <button\n                    className=\"form-submit\"\n                    disabled={submitDisabled}\n                    type=\"button\"\n                    style={isPopup ? { color: textColor } : {}}\n                    onClick={() => {\n                        if (link) {\n                            window?.open(link)\n                        }\n                        if (isPreviewMode) {\n                            onPreviewSubmit?.()\n                        } else {\n                            onSubmit()\n                        }\n                    }}\n                >\n                    {text}\n                </button>\n            </div>\n            {!appearance.whiteLabel && <PostHogLogo />}\n        </div>\n    )\n}\n"]}