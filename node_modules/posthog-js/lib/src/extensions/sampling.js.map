{"version":3,"file":"sampling.js","sourceRoot":"","sources":["../../../src/extensions/sampling.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,uBAAuB,CAAA;AACpD,OAAO,EAAE,OAAO,EAAE,WAAW,EAAE,MAAM,qBAAqB,CAAA;AAE1D,MAAM,UAAU,WAAW,CAAC,YAAkC,EAAE,UAA6B;IACzF,8CAAW,CAAC,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,CAAC,kBAAK,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,UAAC;AACxG,CAAC;AAED,MAAM,UAAU,eAAe,CAAC,YAAgC,EAAE,OAAe;IAC7E,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,OAAO,CAAA;AACnE,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,GAAW;IAClC,IAAI,IAAI,GAAG,CAAC,CAAA;IACZ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;QAClC,IAAI,GAAG,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,CAAC,0BAA0B;QACxE,IAAI,IAAI,CAAC,CAAA,CAAC,2BAA2B;IACzC,CAAC;IACD,OAAO,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;AACzB,CAAC;AAED;;GAEG;AACH,MAAM,UAAU,gBAAgB,CAAC,IAAY,EAAE,OAAe;IAC1D,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,YAAY,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,EAAE,GAAG,CAAC,CAAA;AACvE,CAAC","sourcesContent":["import { clampToRange } from '../utils/number-utils'\nimport { isArray, isUndefined } from '../utils/type-utils'\n\nexport function appendArray(currentValue: string[] | undefined, sampleType: string | string[]): string[] {\n    return [...(currentValue ? currentValue : []), ...(isArray(sampleType) ? sampleType : [sampleType])]\n}\n\nexport function updateThreshold(currentValue: number | undefined, percent: number): number {\n    return (isUndefined(currentValue) ? 1 : currentValue) * percent\n}\n\nexport function simpleHash(str: string) {\n    let hash = 0\n    for (let i = 0; i < str.length; i++) {\n        hash = (hash << 5) - hash + str.charCodeAt(i) // (hash * 31) + char code\n        hash |= 0 // Convert to 32bit integer\n    }\n    return Math.abs(hash)\n}\n\n/*\n * receives percent as a number between 0 and 1\n */\nexport function sampleOnProperty(prop: string, percent: number): boolean {\n    return simpleHash(prop) % 100 < clampToRange(percent * 100, 0, 100)\n}\n"]}